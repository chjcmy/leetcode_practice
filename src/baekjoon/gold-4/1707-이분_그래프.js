/**
 * 문제: 1707 - 이분 그래프
 * 등급: Gold 4
 * 링크: https://www.acmicpc.net/problem/1707
 */

/*
문제 요약:
그래프의 정점의 집합을 둘로 분할하여, 각 집합에 속한 정점끼리는 서로 인접하지 않도록 분할할 수 있을 때, 그러한 그래프를 ‘이분 그래프(Bipartite Graph)’라 부른다.
주어진 그래프가 이분 그래프인지 아닌지 판별하는 프로그램을 작성하시오.

입력:
입력은 여러 개의 테스트 케이스로 구성되어 있으며, 첫째 줄에 테스트 케이스의 개수 K(2≤K≤5)가 주어진다.
각 테스트 케이스의 첫째 줄에는 그래프의 정점의 개수 V(1≤V≤20,000)와 간선의 개수 E(1≤E≤200,000)가 빈 칸을 사이에 두고 주어진다.
각 테스트 케이스의 둘째 줄부터 E개의 줄에 걸쳐 간선에 대한 정보 u, v가 주어지며, 이는 u와 v를 연결하는 간선임을 의미한다.

출력:
각 테스트 케이스마다 이분 그래프이면 YES, 아니면 NO를 순서대로 출력한다.

예제 입력:
2
3 2
1 3
2 3
4 4
1 2
2 3
3 4
4 1

예제 출력:
YES
NO
*/

// --- 백준 제출용 코드 ---
// const fs = require('fs');
// const input = fs.readFileSync('/dev/stdin').toString().trim().split('\n');

function solution(testCase) {
    // 여기에 정답을 구현해주세요.
}

/*
// --- 로컬 테스트용 ---
const K = 2;
const testCases = [
    {
        V: 3, E: 2,
        edges: [[1, 3], [2, 3]]
    },
    {
        V: 4, E: 4,
        edges: [[1, 2], [2, 3], [3, 4], [4, 1]]
    }
];

testCases.forEach(tc => {
    // solution(tc) 로직 필요
});
*/