/**
 * 문제: 1504 - 특정한 최단 경로
 * 등급: Gold 4
 * 링크: https://www.acmicpc.net/problem/1504 
 */

/*
문제 요약:
방향성이 없는 그래프가 주어진다. 1번 정점에서 N번 정점으로 최단 거리로 이동하려고 한다.
단, 주어진 두 개의 정점은 반드시 거쳐야 한다.
한번 이동했던 정점은 물론, 한번 이동했던 간선도 다시 이동할 수 있다.
하지만 반드시 최단 경로로 이동해야 한다는 사실에 주의하라.
1번 정점에서 N번 정점으로 가는 최단 경로의 길이를 출력하는 프로그램을 작성하시오. (경로가 없는 경우 -1 출력)

입력:
첫째 줄에 정점의 개수 N과 간선의 개수 E가 주어진다. (2 ≤ N ≤ 800, 0 ≤ E ≤ 200,000)
다음 E개의 줄에 걸쳐서 세 개의 정수 a, b, c가 주어지는데, a번 정점에서 b번 정점까지 양방향 길이 c인 간선이 있다는 의미이다.
다음 줄에는 반드시 거쳐야 하는 두 개의 서로 다른 정점 번호 v1과 v2가 주어진다.

출력:
첫째 줄에 두 개의 정점을 지나는 최단 경로의 길이를 출력한다. 그러한 경로가 없을 때에는 -1을 출력한다.

예제 입력:
4 6
1 2 3
2 3 3
3 4 1
1 3 5
2 4 5
1 4 4
2 3

예제 출력:
7
*/

// --- 백준 제출용 코드 ---
// const fs = require('fs');
// const input = fs.readFileSync('/dev/stdin').toString().trim().split('\n');

// 우선순위 큐 (최소 힙) 구현이 필요합니다.

function dijkstra(start, graph, N) {
    // 여기에 정답을 구현해주세요.
}

function solution(input) {
    // 여기에 정답을 구현해주세요.
}

/*
// --- 로컬 테스트용 ---
const exampleInput = `
4 6
1 2 3
2 3 3
3 4 1
1 3 5
2 4 5
1 4 4
2 3
`.trim().split('\n');
console.log(solution(exampleInput)); // 7
*/