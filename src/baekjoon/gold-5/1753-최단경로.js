/**
 * 문제: 1753 - 최단경로
 * 등급: Gold 5
 * 링크: https://www.acmicpc.net/problem/1753
 */

/*
문제 요약:
방향그래프가 주어지면 주어진 시작점에서 다른 모든 정점으로의 최단 경로를 구하는 프로그램을 작성하시오. 
단, 모든 간선의 가중치는 10 이하의 자연수이다.

입력:
첫째 줄에 정점의 개수 V와 간선의 개수 E가 주어진다. (1≤V≤20,000, 1≤E≤300,000) 
모든 정점에는 1부터 V까지 번호가 매겨져 있다고 가정한다. 
둘째 줄에는 시작 정점의 번호 K(1≤K≤V)가 주어진다. 
셋째 줄부터 E개의 줄에 걸쳐 각 간선을 나타내는 세 개의 정수 (u, v, w)가 순서대로 주어진다. 
이는 u에서 v로 가는 가중치 w인 간선이 존재한다는 뜻이다. u와 v는 서로 다른 정점일 수 있으며, w는 10 이하의 자연수이다.

출력:
첫째 줄부터 V개의 줄에 걸쳐, i번째 줄에 i번 정점으로의 최단 경로의 경로값을 출력한다. 
시작점 자신은 0으로, 경로가 존재하지 않는 경우에는 INF를 출력하면 된다.

예제 입력:
5 6
1
5 1 1
1 2 2
1 3 3
2 3 4
2 4 5
3 4 6

예제 출력:
0
2
3
7
INF
*/

// --- 백준 제출용 코드 ---
// const fs = require('fs');
// const input = fs.readFileSync('/dev/stdin').toString().trim().split('\n');

// 우선순위 큐 (최소 힙) 구현. 실제 코딩 테스트에서는 라이브러리 사용을 권장합니다.
class MinHeap {
    constructor() {
        // 여기에 정답을 구현해주세요.
    }
    // ... (이하 생략) ...
}

function solution(input) {
    // 여기에 정답을 구현해주세요.
}

/*
// --- 로컬 테스트용 ---
const exampleInput = `
5 6
1
5 1 1
1 2 2
1 3 3
2 3 4
2 4 5
3 4 6
`.trim().split('\n');
console.log(solution(exampleInput));
*/