/*
 * 프로그래머스 - 튜플
 * https://school.programmers.co.kr/learn/courses/30/lessons/64065
 * Level 2
 */

/*
  문제 설명:
  셀 수 있는 수량의 순서 있는 열거 또는 어떤 순서를 따르는 요소들의 모음을 튜플(tuple)이라고 합니다. 
  n개의 요소를 가진 튜플을 n-튜플(n-tuple)이라고 하며, 다음과 같이 표현할 수 있습니다: (a1, a2, a3, ..., an).

  튜플은 다음과 같은 성질을 가지고 있습니다.
  - 중복된 원소가 있을 수 있습니다. (예: (2, 3, 1, 2))
  - 원소에 정해진 순서가 있으며, 원소의 순서가 다르면 서로 다른 튜플입니다. (예: (1, 2, 3) ≠ (1, 3, 2))
  - 튜플의 원소 개수는 유한합니다.

  문제에서는 원소의 개수가 n개이고, 중복되는 원소가 없는 튜플 (a1, a2, a3, ..., an)이 주어질 때 (단, a1, a2, ..., an은 자연수), 
  이 튜플을 다음과 같이 집합 기호 '{', '}'를 이용하여 표현합니다.

  주어진 문자열 s는 이러한 방식으로 표현된 튜플을 포함하는 집합입니다. 
  이 s를 파싱하여 원래의 튜플을 찾아 return 하는 것이 문제입니다.

  제한 사항:
  - s는 길이가 5 이상 1,000,000 이하인 문자열입니다.
  - s는 숫자로만 이루어져 있습니다.
  - s는 {와 }로만 이루어져 있습니다.
*/

function solution(s: string): number[] {
  let answer: number[] = [];
  // 문제 풀이
  return answer;
}

// 예제 테스트
console.log(`예제 1: ${solution("{{2},{2,1},{2,1,3},{2,1,3,4}}")} `); // [2, 1, 3, 4]
console.log(`예제 2: ${solution("{{1,2,3},{2,1},{1,2,4,3},{2}}")} `); // [2, 1, 3, 4]
console.log(`예제 3: ${solution("{{20,111},{111}}")} `); // [111, 20]
