/*
 * 프로그래머스 - 합승 택시 요금
 * https://school.programmers.co.kr/learn/courses/30/lessons/72413
 * Level 3
 */

/*
  문제 설명:
  밤늦게 귀가하는 무지와 어피치는 귀가 방향이 비슷하여 택시 합승을 고려하고 있습니다. 
  이들은 합승을 통해 택시 요금을 얼마나 아낄 수 있을지 계산하고자 합니다.

  지점의 개수 n, 출발 지점 s, 무지의 도착 지점 a, 어피치의 도착 지점 b, 
  그리고 각 지점 사이의 예상 택시 요금을 나타내는 fares 배열이 주어질 때, 
  무지와 어피치 모두 각자의 도착 지점에 도착하는 데 드는 최소 예상 택시 요금을 return 하도록 solution 함수를 작성해주세요.

  제한 사항:
  - n은 2 이상 200 이하인 자연수입니다.
  - s, a, b는 1 이상 n 이하인 정수입니다.
  - fares 배열의 길이는 1 이상 n * (n - 1) / 2 이하입니다.
  - fares 배열의 각 원소는 [c, d, f] 형태로, c 지점과 d 지점 사이의 택시 요금이 f임을 의미합니다.
  - 출발 지점 s에서 도착 지점 a와 b로 가는 경로가 존재하는 경우만 입력으로 주어집니다.
*/

function solution(n: number, s: number, a: number, b: number, fares: number[][]): number {
  let answer = 0;
  // 문제 풀이
  return answer;
}

// 예제 테스트
console.log(`예제 1: ${solution(6, 4, 6, 2, [[4, 1, 10], [3, 5, 24], [5, 6, 2], [3, 1, 41], [5, 1, 24], [4, 6, 50], [2, 4, 66], [2, 3, 22], [1, 6, 25]])} `); // 82
console.log(`예제 2: ${solution(7, 3, 4, 1, [[5, 7, 9], [4, 6, 4], [3, 6, 1], [6, 2, 2], [4, 2, 5], [7, 6, 8], [6, 3, 1]])} `); // 14
console.log(`예제 3: ${solution(6, 4, 5, 6, [[2, 6, 6], [6, 3, 7], [4, 6, 7], [6, 5, 11], [2, 5, 12], [5, 3, 20], [2, 4, 8], [4, 3, 9]])} `); // 18
