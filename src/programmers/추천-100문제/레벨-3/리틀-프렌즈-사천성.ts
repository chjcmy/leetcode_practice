/*
 * 프로그래머스 - 리틀 프렌즈 사천성
 * https://school.programmers.co.kr/learn/courses/30/lessons/1836
 * Level 3
 */

/*
  문제 설명:
  게임은 2차원 배열로 구성된 게임판에서 진행되며, 여러 가지 무늬의 타일이 배치되어 있습니다. 
  같은 모양의 타일은 항상 두 개씩 배치됩니다. 게임의 목표는 배치된 모든 타일을 제거하는 것입니다.

  타일 제거 규칙:
  같은 모양의 타일 두 개를 연결하는 경로가 두 번 이하로 꺾이면서(즉, 최대 두 번의 90도 회전) 다른 타일에 의해 막히지 않으면 해당 타일 쌍을 제거할 수 있습니다.

  입력 형식:
  게임판의 크기를 나타내는 m (행)과 n (열), 그리고 배치된 타일의 정보를 담은 문자열 배열 board가 주어집니다. 
  board의 크기는 m이며, 각 원소는 n 글자의 문자열로 구성됩니다.

  출력 형식:
  해가 존재하는 경우 타일을 제거하는 순서대로 한 글자씩 이루어진 문자열을 return 합니다. 
  만약 해가 여러 가지인 경우, 알파벳 순으로 가장 먼저인 문자열을 return 합니다. 
  해가 존재하지 않는 경우 "IMPOSSIBLE"을 return 합니다.

  제한 사항:
  - m은 1 이상 100 이하의 자연수입니다.
  - n은 1 이상 100 이하의 자연수입니다.
  - board의 각 칸은 알파벳 대문자, '.', '*' 중 하나입니다.
    - 알파벳 대문자는 타일을 나타냅니다. 같은 알파벳은 같은 종류의 타일을 의미합니다.
    - '.'은 빈 칸을 의미합니다.
    - '*'은 벽을 의미합니다.
*/

function solution(m: number, n: number, board: string[]): string {
  let answer = "";
  // 문제 풀이
  return answer;
}

// 예제 테스트
console.log(`예제 1: ${solution(3, 3, ["DBA", "C*CA", "DBA"])} `); // "ABCD"
console.log(`예제 2: ${solution(2, 4, ["NNAA", "NNBB"])} `); // "AB"
console.log(`예제 3: ${solution(4, 4, [".*.", ".*.", ".*.", ".*."])} `); // "IMPOSSIBLE"
