/*
 * 프로그래머스 - 카드 짝 맞추기
 * https://school.programmers.co.kr/learn/courses/30/lessons/72415
 * Level 3
 */

/*
  문제 설명:
  게임 개발자인 베로니는 간단한 카드 짝맞추기 보드 게임을 개발하고 있습니다. 
  이 게임은 4x4 크기의 보드에서 진행되며, 보드에는 여러 종류의 카드가 짝을 이루어 놓여 있습니다. 
  목표는 모든 카드 짝을 찾아 보드에서 제거하는 것입니다.

  조작 방법:
  플레이어는 보드 위에서 커서를 조작하여 카드를 뒤집습니다. 조작 가능한 키는 다음과 같습니다.
  1. 방향키 (상하좌우): 커서를 한 칸 이동시킵니다.
  2. Ctrl + 방향키: 해당 방향으로 가장 가까운 카드가 있는 곳으로 커서를 이동시킵니다. 
     만약 해당 방향에 카드가 없다면, 보드의 가장자리까지 이동합니다.
  3. Enter 키: 현재 커서가 위치한 카드를 뒤집습니다.

  게임 규칙:
  - 카드를 뒤집으면 해당 카드의 종류가 공개됩니다.
  - 연속으로 뒤집은 두 카드의 종류가 같으면 해당 카드 짝은 보드에서 제거됩니다.
  - 연속으로 뒤집은 두 카드의 종류가 다르면, 두 카드는 다시 뒷면으로 뒤집힙니다.

  주어진 게임 보드 상태에서 모든 카드 짝을 제거하기 위한 최소 키 조작 횟수(커서 이동 및 카드 뒤집기)를 return 하도록 solution 함수를 작성해주세요.

  제한 사항:
  - board: 현재 카드가 놓인 상태를 나타내는 4x4 크기의 2차원 배열입니다.
  - r, c: 커서의 초기 행(r)과 열(c) 위치입니다.
*/

function solution(board: number[][], r: number, c: number): number {
  let answer = 0;
  // 문제 풀이
  return answer;
}

// 예제 테스트
console.log(`예제 1: ${solution([[1,0,0,3],[2,0,0,0],[0,0,0,2],[3,0,1,0]], 1, 0)} `); // 14
console.log(`예제 2: ${solution([[3,0,0,2],[0,0,1,0],[0,1,0,0],[2,0,0,3]], 0, 1)} `); // 16
